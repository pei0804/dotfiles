{
  "window.zoomLevel": 1,
  "window.title": "${dirty}${activeEditorShort} / ${rootName}",
  "editor.renderLineHighlight": "all",
  "editor.tabSize": 2,
  "editor.formatOnType": true,
  "files.autoSave": "afterDelay",
  "files.eol": "\n",
  "files.autoGuessEncoding": true,
  "files.exclude": {
    "**/.DS_Store": true,
    "**/.git": true,
    "**/.hg": true,
    "**/.svn": true,
    "**/*.dll": true,
    "**/*.idb": true,
    "**/*.ilk": true,
    "**/*.o": true,
    "**/*.obj": true,
    "**/*.pdb": true,
    "**/*.tlog": true,
    "**/CVS": true,
    "**/.trunk/*out/": true,
    "**/.trunk/*actions/": true,
    "**/.trunk/*logs/": true,
    "**/.trunk/*plugins/": true,
    "**/.trunk/*notifications/": true
  },
  "extensions.autoUpdate": true,
  "extensions.ignoreRecommendations": false,
  "workbench.iconTheme": "material-icon-theme",
  "vim.normalModeKeyBindingsNonRecursive": [
    {
      "before": [";"],
      "commands": ["workbench.action.showCommands"]
    }
  ],
  "css.validate": true,
  "editor.formatOnSave": true,
  "javascript.format.enable": false,
  "eslint.autoFixOnSave": true,
  "eslint.enable": true,
  "eslint.validate": [
    {
      "language": "javascript",
      "autoFix": true
    },
    {
      "language": "javascriptreact",
      "autoFix": true
    },
    {
      "language": "typescript",
      "autoFix": true
    },
    {
      "language": "typescriptreact",
      "autoFix": true
    }
  ],
  "files.insertFinalNewline": true,
  "files.trimTrailingWhitespace": true,
  "prettier.eslintIntegration": true,
  "prettier.stylelintIntegration": true,
  "stylelint.enable": true,
  "typescript.tsserver.trace": "verbose",
  "[markdown]": {
    "files.trimTrailingWhitespace": false
  },
  "[typescriptreact]": {
    "editor.defaultFormatter": "vscode.typescript-language-features"
  },
  "typescript.updateImportsOnFileMove.enabled": "always",
  "[typescript]": {
    "editor.defaultFormatter": "rvest.vs-code-prettier-eslint"
  },
  "editor.codeActionsOnSave": {
    "source.fixAll.eslint": "explicit"
  },
  "vim.statusBarColors.normal": "",
  "vim.insertModeKeyBindings": [
        {
        "before":["ctrl+]"],
        "after":["&lt;Esc&gt;"]
        }
    ],
    "vim.useSystemClipboard": true,
    "workbench.tree.indent": 16,
    "workbench.colorTheme": "Darcula Theme from IntelliJ",
    "window.openFoldersInNewWindow": "on",
    "terminal.external.osxExec": "iTerm.app",
    "html.format.enable": false,
    "dbt-formatter.lowerWords": false,
    "dbt-formatter.upper": false,
    "dbt-formatter.dialect": "",
    "dbt-formatter.camelCase": false,
    "editor.tokenColorCustomizations": {
      "textMateRules": [
        {
          "scope": "keyword.other.dotenv",
          "settings": {
            "foreground": "#FF000005"
          }
        }
      ]
    },
    "[python]": {
      "editor.formatOnType": true
    },
    "yaml.customTags": [
      "!And",
      "!And sequence",
      "!If",
      "!If sequence",
      "!Not",
      "!Not sequence",
      "!Equals",
      "!Equals sequence",
      "!Or",
      "!Or sequence",
      "!FindInMap",
      "!FindInMap sequence",
      "!Base64",
      "!Join",
      "!Join sequence",
      "!Cidr",
      "!Ref",
      "!Sub",
      "!Sub sequence",
      "!GetAtt",
      "!GetAZs",
      "!ImportValue",
      "!ImportValue sequence",
      "!Select",
      "!Select sequence",
      "!Split",
      "!Split sequence"
    ],
    "redhat.telemetry.enabled": true,
    "editor.inlineSuggest.enabled": true,
    "github.copilot.advanced": {

    },
    "markdown.preview.breaks": true,
    "[json]": {
      "editor.defaultFormatter": "vscode.json-language-features"
    },
    "dbt.prefixGenerateModel": "src",
    "dbt.fileNameTemplateGenerateModel": "{prefix}_{sourceName}__{tableName}",
    "trunk.trunkGrayOutNonBlockingIssues": false,
    "files.watcherExclude": {
      "**/.trunk/*out/": true,
      "**/.trunk/*actions/": true,
      "**/.trunk/*logs/": true,
      "**/.trunk/*plugins/": true,
      "**/.trunk/*notifications/": true
    },
    "editor.defaultFormatter": "trunk.io",
    "terminal.integrated.inheritEnv": false
}
