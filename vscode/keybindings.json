// Place your key bindings in this file to override the defaults
[
  // プロジェクト全体検索の切り替え
  {
    "key": "shift+cmd+f",
    "command": "workbench.action.findInFiles",
    "when": "!searchInputBoxFocus"
  },
  {
    "key": "shift+cmd+f",
    "command": "workbench.action.focusFirstEditorGroup",
    "when": "searchInputBoxFocus"
  },
  // 実装箇所にコードジャンプ
  {
    "key": "ctrl+]",
    "command": "references-view.find",
    "when": "editorFocus"
  },
  // 宣言箇所に移動
  {
    "key": "ctrl+]",
    "command": "editor.action.goToDeclaration",
    "when": "editorFocus"
  },
  // サイドバーへの移動 (ctrl+hをhにしてctrlを話すだけで切り替わる)
  {
    "key": "ctrl+w h",
    "command": "workbench.action.focusSideBar",
    "when": "editorFocus"
  },
  // サイドバーからの移動 (ctrl+hをhにしてctrlを話すだけで切り替わる)
  {
    "key": "ctrl+w l",
    "command": "workbench.action.focusFirstEditorGroup",
    "when": "!editorFocus"
  },
  // ターミナル
  {
    "key": "cmd+t",
    "command": "workbench.action.terminal.focus",
    "when": "editorTextFocus"
  },
  {
    "key": "cmd+t",
    "command": "workbench.action.focusFirstEditorGroup",
    "when": "terminalFocus"
  },
  // キャンセル系
  {
    "key": "ctrl+[",
    "command": "search.action.cancel",
    "when": "searchViewletVisible"
  },
  {
    "key": "ctrl+[",
    "command": "closeFindWidget",
    "when": "findWidgetVisible"
  },
  {
    "key": "ctrl+[",
    "command": "closeReplaceInFilesWidget",
    "when": "replaceInputBoxFocus && searchViewletVisible"
  },
  {
    "key": "ctrl+[",
    "command": "workbench.action.hideInterfaceOverview",
    "when": "interfaceOverviewVisible"
  },
  {
    "key": "ctrl+[",
    "command": "workbench.action.terminal.hideFindWidget",
    "when": "terminalFindWidgetVisible && terminalFocus"
  },
  {
    "key": "ctrl+[",
    "command": "cancelRenameInput",
    "when": "editorFocus && renameInputVisible"
  },
  {
    "key": "ctrl+[",
    "command": "cancelSelection",
    "when": "editorHasSelection && textInputFocus"
  },
  {
    "key": "ctrl+[",
    "command": "closeAccessibilityHelp",
    "when": "accessibilityHelpWidgetVisible && editorFocus"
  },
  {
    "key": "ctrl+[",
    "command": "closeBreakpointWidget",
    "when": "breakpointWidgetVisible && textInputFocus"
  },
  {
    "key": "ctrl+[",
    "command": "closeDirtyDiff",
    "when": "dirtyDiffVisible"
  },
  {
    "key": "ctrl+[",
    "command": "closeFindWidget",
    "when": "editorFocus && findWidgetVisible"
  },
  {
    "key": "ctrl+[",
    "command": "closeMarkersNavigation",
    "when": "editorFocus && markersNavigationVisible"
  },
  {
    "key": "ctrl+[",
    "command": "closeParameterHints",
    "when": "editorTextFocus && parameterHintsVisible"
  },
  {
    "key": "ctrl+[",
    "command": "closeReferenceSearch",
    "when": "referenceSearchVisible && !config.editor.stablePeek"
  },
  {
    "key": "ctrl+[",
    "command": "closeReferenceSearchEditor",
    "when": "inReferenceSearchEditor && !config.editor.stablePeek"
  },
  {
    "key": "ctrl+[",
    "command": "editor.action.webvieweditor.hideFind",
    "when": "webviewEditorFocus && webviewFindWidgetVisible"
  },
  {
    "key": "ctrl+[",
    "command": "hideSuggestWidget",
    "when": "suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "ctrl+[",
    "command": "keybindings.editor.clearSearchResults",
    "when": "inKeybindings && inKeybindingsSearch"
  },
  {
    "key": "ctrl+[",
    "command": "leaveEditorMessage",
    "when": "messageVisible"
  },
  {
    "key": "ctrl+[",
    "command": "leaveSnippet",
    "when": "editorTextFocus && inSnippetMode"
  },
  {
    "key": "ctrl+[",
    "command": "list.clear",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "ctrl+[",
    "command": "notifications.hideList",
    "when": "notificationCenterVisible"
  },
  {
    "key": "ctrl+[",
    "command": "notifications.hideToasts",
    "when": "notificationToastsVisible"
  },
  {
    "key": "ctrl+[",
    "command": "removeSecondaryCursors",
    "when": "editorHasMultipleSelections && textInputFocus"
  },
  {
    "key": "ctrl+[",
    "command": "search.action.cancel",
    "when": "listFocus && searchViewletVisible && !inputFocus"
  },
  {
    "key": "ctrl+[",
    "command": "settings.action.clearSearchResults",
    "when": "inSettingsSearch"
  },
  {
    "key": "ctrl+[",
    "command": "workbench.action.closeQuickOpen",
    "when": "inQuickOpen"
  },
  {
    "key": "ctrl+[",
    "command": "workbench.action.exitZenMode",
    "when": "inZenMode"
  }
]
